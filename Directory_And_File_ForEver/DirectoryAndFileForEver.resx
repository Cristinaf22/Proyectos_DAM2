<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>